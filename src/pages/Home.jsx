import React, { useState, useEffect } from 'react'
import { Loader, Card, FormField } from "../components"

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />)
  }

  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false)
  const [allPost, setAllPost] = useState(null)

  const [searchText, setSearchText] = useState('')
  const [searchResult, setSearchResult] = useState(null)
  const [searchTimeOut, setSearchTimeOut] = useState(null)

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch('https://server-dall-e.vercel.app/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-type': 'application/json',
          }
        })

        if (response.ok) {
          const result = await response.json()
          setAllPost(result.data.reverse())
        }

      } catch (error) {
        alert(error)
      } finally {
        setLoading(false);
      }
    }

    fetchPosts()
  }, [])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeOut);
    setSearchText(e.target.value);


    setSearchTimeOut(
      setTimeout(() => {
        const searchResult = allPost.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))

        setSearchResult(searchResult)
      }, 1000)
    )
  }


  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222238] text-32'>The Community Showcase</h1>
        <p className='mt-2 text-[#666e95] text-16 max-w[400px]'>Browse trhough a collection of imaginative and visually stunning generated by dall-e AI</p>
      </div>

      <div className='mt-16'>
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-[#666e75] text-xl mb-73'>
                Showing the Result <span className='text-[#222328]' >{searchText}</span>
              </h2>
            )}

            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3' >
              {searchText ? (
                <RenderCards
                  data={searchResult}
                  title='No search results found'
                />
              ) : (
                <RenderCards
                  data={allPost}
                  title='No posts found'
                />
              )}
            </div>
          </>
        )}
      </div>

    </section>
  )
}

export default Home